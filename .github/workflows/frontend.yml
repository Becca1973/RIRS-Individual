name: Frontend CI

on:
  push:
    branches:
      - main
      - production
  pull_request:
    branches:
      - main
      - production

jobs:
  build-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/package-lock.json') }} # Ključ za cache
          restore-keys: |
            ${{ runner.os }}-frontend-
      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      - name: Build application # Gradnja aplikacije
        run: |
          cd frontend
          npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/build/

  test-frontend:
    needs: build-frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-frontend-

      - name: Install dependencies
        run: |
          cd frontend
          npm install

      - name: Run tests with coverage
        run: |
          cd frontend
          npm run test:ci

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: frontend/coverage/
  #DOCKER
  dockerize-and-push-dev:
    needs: test-frontend
    runs-on: ubuntu-latest
    environment: Development
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub # Prijava v Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build Docker image # Gradnja Docker slike
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:dev ./frontend
          docker tag ${{ secrets.DOCKER_USERNAME }}/frontend:dev ${{ secrets.DOCKER_USERNAME }}/frontend:${{ github.sha }}

      - name: Push Docker image to Docker Hub # Potisk Docker slike na Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:dev
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:${{ github.sha }}

  # Gradnja Docker slike in nalaganje na Docker Hub - Production
dockerize-and-push-prod-frontend:
  needs: [test-frontend] # Odstranil sem sonarcloud-analysis iz needs
  runs-on: ubuntu-latest

  if: github.ref == 'refs/heads/production'

  environment:
    name: Production

  steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Login to Docker Hub # Prijava na Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Build Docker image # Gradnja Docker slike za Frontend
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:prod ./frontend
        docker tag ${{ secrets.DOCKER_USERNAME }}/frontend:prod ${{ secrets.DOCKER_USERNAME }}/frontend:${{ github.sha }}

    - name: Push Docker image to Docker Hub # Naložitev slike na Docker Hub
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/frontend:prod
        docker push ${{ secrets.DOCKER_USERNAME }}/frontend:${{ github.sha }}

  deploy-pages:
    needs: test-frontend
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to GitHub Pages # Implementacija na GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
